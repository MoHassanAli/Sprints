
AVR_DIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000246  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000029a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000029a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002cc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  00000308  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000797  00000000  00000000  00000370  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005b1  00000000  00000000  00000b07  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000359  00000000  00000000  000010b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000098  00000000  00000000  00001414  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000039e  00000000  00000000  000014ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000291  00000000  00000000  0000184a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00001adb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 21 01 	jmp	0x242	; 0x242 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include "MCAL/DIO_Interface.h"


int main(void)
{
      DIO_VidSetPinDirection(PortA, PIN0, OUTPUT);
  6c:	41 e0       	ldi	r20, 0x01	; 1
  6e:	60 e0       	ldi	r22, 0x00	; 0
  70:	80 e0       	ldi	r24, 0x00	; 0
  72:	0e 94 41 00 	call	0x82	; 0x82 <DIO_VidSetPinDirection>
      DIO_VidSetPinValue(PortA, PIN0, HIGH);
  76:	41 e0       	ldi	r20, 0x01	; 1
  78:	60 e0       	ldi	r22, 0x00	; 0
  7a:	80 e0       	ldi	r24, 0x00	; 0
  7c:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_VidSetPinValue>
  80:	ff cf       	rjmp	.-2      	; 0x80 <main+0x14>

00000082 <DIO_VidSetPinDirection>:


void DIO_VidSetPinDirection(uint8_t copy_U8Port , uint8_t copy_U8Pin ,uint8_t copy_U8Direction)
{
	/* check if die is output\*/
	if(OUTPUT == copy_U8Direction)
  82:	41 30       	cpi	r20, 0x01	; 1
  84:	a1 f5       	brne	.+104    	; 0xee <DIO_VidSetPinDirection+0x6c>
	{
		switch (copy_U8Port)
  86:	81 30       	cpi	r24, 0x01	; 1
  88:	89 f0       	breq	.+34     	; 0xac <DIO_VidSetPinDirection+0x2a>
  8a:	28 f0       	brcs	.+10     	; 0x96 <DIO_VidSetPinDirection+0x14>
  8c:	82 30       	cpi	r24, 0x02	; 2
  8e:	c9 f0       	breq	.+50     	; 0xc2 <DIO_VidSetPinDirection+0x40>
  90:	83 30       	cpi	r24, 0x03	; 3
  92:	11 f1       	breq	.+68     	; 0xd8 <DIO_VidSetPinDirection+0x56>
  94:	08 95       	ret
		{
			case PortA : SET_BIT(DDRA,copy_U8Pin); break;
  96:	81 e0       	ldi	r24, 0x01	; 1
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	02 c0       	rjmp	.+4      	; 0xa0 <DIO_VidSetPinDirection+0x1e>
  9c:	88 0f       	add	r24, r24
  9e:	99 1f       	adc	r25, r25
  a0:	6a 95       	dec	r22
  a2:	e2 f7       	brpl	.-8      	; 0x9c <DIO_VidSetPinDirection+0x1a>
  a4:	9a b3       	in	r25, 0x1a	; 26
  a6:	89 2b       	or	r24, r25
  a8:	8a bb       	out	0x1a, r24	; 26
  aa:	08 95       	ret
			case PortB : SET_BIT(DDRB,copy_U8Pin); break;
  ac:	81 e0       	ldi	r24, 0x01	; 1
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	02 c0       	rjmp	.+4      	; 0xb6 <DIO_VidSetPinDirection+0x34>
  b2:	88 0f       	add	r24, r24
  b4:	99 1f       	adc	r25, r25
  b6:	6a 95       	dec	r22
  b8:	e2 f7       	brpl	.-8      	; 0xb2 <DIO_VidSetPinDirection+0x30>
  ba:	97 b3       	in	r25, 0x17	; 23
  bc:	89 2b       	or	r24, r25
  be:	87 bb       	out	0x17, r24	; 23
  c0:	08 95       	ret
			case PortC : SET_BIT(DDRC,copy_U8Pin); break;
  c2:	81 e0       	ldi	r24, 0x01	; 1
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	02 c0       	rjmp	.+4      	; 0xcc <DIO_VidSetPinDirection+0x4a>
  c8:	88 0f       	add	r24, r24
  ca:	99 1f       	adc	r25, r25
  cc:	6a 95       	dec	r22
  ce:	e2 f7       	brpl	.-8      	; 0xc8 <DIO_VidSetPinDirection+0x46>
  d0:	94 b3       	in	r25, 0x14	; 20
  d2:	89 2b       	or	r24, r25
  d4:	84 bb       	out	0x14, r24	; 20
  d6:	08 95       	ret
			case PortD : SET_BIT(DDRD,copy_U8Pin); break;
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	02 c0       	rjmp	.+4      	; 0xe2 <DIO_VidSetPinDirection+0x60>
  de:	88 0f       	add	r24, r24
  e0:	99 1f       	adc	r25, r25
  e2:	6a 95       	dec	r22
  e4:	e2 f7       	brpl	.-8      	; 0xde <DIO_VidSetPinDirection+0x5c>
  e6:	91 b3       	in	r25, 0x11	; 17
  e8:	89 2b       	or	r24, r25
  ea:	81 bb       	out	0x11, r24	; 17
  ec:	08 95       	ret
			default:                                           break;
		}
	}
	else if (INPUT == copy_U8Direction) /* check if dire is input */
  ee:	41 11       	cpse	r20, r1
  f0:	37 c0       	rjmp	.+110    	; 0x160 <DIO_VidSetPinDirection+0xde>
	{
		switch (copy_U8Port)
  f2:	81 30       	cpi	r24, 0x01	; 1
  f4:	91 f0       	breq	.+36     	; 0x11a <DIO_VidSetPinDirection+0x98>
  f6:	28 f0       	brcs	.+10     	; 0x102 <DIO_VidSetPinDirection+0x80>
  f8:	82 30       	cpi	r24, 0x02	; 2
  fa:	d9 f0       	breq	.+54     	; 0x132 <DIO_VidSetPinDirection+0xb0>
  fc:	83 30       	cpi	r24, 0x03	; 3
  fe:	29 f1       	breq	.+74     	; 0x14a <DIO_VidSetPinDirection+0xc8>
 100:	08 95       	ret
		{
			case PortA : CLR_BIT(DDRA,copy_U8Pin); break;
 102:	81 e0       	ldi	r24, 0x01	; 1
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	02 c0       	rjmp	.+4      	; 0x10c <DIO_VidSetPinDirection+0x8a>
 108:	88 0f       	add	r24, r24
 10a:	99 1f       	adc	r25, r25
 10c:	6a 95       	dec	r22
 10e:	e2 f7       	brpl	.-8      	; 0x108 <DIO_VidSetPinDirection+0x86>
 110:	80 95       	com	r24
 112:	9a b3       	in	r25, 0x1a	; 26
 114:	89 23       	and	r24, r25
 116:	8a bb       	out	0x1a, r24	; 26
 118:	08 95       	ret
			case PortB : CLR_BIT(DDRB,copy_U8Pin); break;
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	02 c0       	rjmp	.+4      	; 0x124 <DIO_VidSetPinDirection+0xa2>
 120:	88 0f       	add	r24, r24
 122:	99 1f       	adc	r25, r25
 124:	6a 95       	dec	r22
 126:	e2 f7       	brpl	.-8      	; 0x120 <DIO_VidSetPinDirection+0x9e>
 128:	80 95       	com	r24
 12a:	97 b3       	in	r25, 0x17	; 23
 12c:	89 23       	and	r24, r25
 12e:	87 bb       	out	0x17, r24	; 23
 130:	08 95       	ret
			case PortC : CLR_BIT(DDRC,copy_U8Pin); break;
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	02 c0       	rjmp	.+4      	; 0x13c <DIO_VidSetPinDirection+0xba>
 138:	88 0f       	add	r24, r24
 13a:	99 1f       	adc	r25, r25
 13c:	6a 95       	dec	r22
 13e:	e2 f7       	brpl	.-8      	; 0x138 <DIO_VidSetPinDirection+0xb6>
 140:	80 95       	com	r24
 142:	94 b3       	in	r25, 0x14	; 20
 144:	89 23       	and	r24, r25
 146:	84 bb       	out	0x14, r24	; 20
 148:	08 95       	ret
			case PortD : CLR_BIT(DDRD,copy_U8Pin); break;
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	02 c0       	rjmp	.+4      	; 0x154 <DIO_VidSetPinDirection+0xd2>
 150:	88 0f       	add	r24, r24
 152:	99 1f       	adc	r25, r25
 154:	6a 95       	dec	r22
 156:	e2 f7       	brpl	.-8      	; 0x150 <DIO_VidSetPinDirection+0xce>
 158:	80 95       	com	r24
 15a:	91 b3       	in	r25, 0x11	; 17
 15c:	89 23       	and	r24, r25
 15e:	81 bb       	out	0x11, r24	; 17
 160:	08 95       	ret

00000162 <DIO_VidSetPinValue>:


void DIO_VidSetPinValue(uint8_t copy_U8Port , uint8_t copy_U8Pin ,uint8_t copy_U8Value)
{

	if(OUTPUT == copy_U8Value)
 162:	41 30       	cpi	r20, 0x01	; 1
 164:	a1 f5       	brne	.+104    	; 0x1ce <DIO_VidSetPinValue+0x6c>
	{
		switch (copy_U8Port)
 166:	81 30       	cpi	r24, 0x01	; 1
 168:	89 f0       	breq	.+34     	; 0x18c <DIO_VidSetPinValue+0x2a>
 16a:	28 f0       	brcs	.+10     	; 0x176 <DIO_VidSetPinValue+0x14>
 16c:	82 30       	cpi	r24, 0x02	; 2
 16e:	c9 f0       	breq	.+50     	; 0x1a2 <DIO_VidSetPinValue+0x40>
 170:	83 30       	cpi	r24, 0x03	; 3
 172:	11 f1       	breq	.+68     	; 0x1b8 <DIO_VidSetPinValue+0x56>
 174:	08 95       	ret
		{
			case PortA : SET_BIT(PORTA,copy_U8Pin); break;
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	02 c0       	rjmp	.+4      	; 0x180 <DIO_VidSetPinValue+0x1e>
 17c:	88 0f       	add	r24, r24
 17e:	99 1f       	adc	r25, r25
 180:	6a 95       	dec	r22
 182:	e2 f7       	brpl	.-8      	; 0x17c <DIO_VidSetPinValue+0x1a>
 184:	9b b3       	in	r25, 0x1b	; 27
 186:	89 2b       	or	r24, r25
 188:	8b bb       	out	0x1b, r24	; 27
 18a:	08 95       	ret
			case PortB : SET_BIT(PORTB,copy_U8Pin); break;
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	02 c0       	rjmp	.+4      	; 0x196 <DIO_VidSetPinValue+0x34>
 192:	88 0f       	add	r24, r24
 194:	99 1f       	adc	r25, r25
 196:	6a 95       	dec	r22
 198:	e2 f7       	brpl	.-8      	; 0x192 <DIO_VidSetPinValue+0x30>
 19a:	98 b3       	in	r25, 0x18	; 24
 19c:	89 2b       	or	r24, r25
 19e:	88 bb       	out	0x18, r24	; 24
 1a0:	08 95       	ret
			case PortC : SET_BIT(PORTC,copy_U8Pin); break;
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	02 c0       	rjmp	.+4      	; 0x1ac <DIO_VidSetPinValue+0x4a>
 1a8:	88 0f       	add	r24, r24
 1aa:	99 1f       	adc	r25, r25
 1ac:	6a 95       	dec	r22
 1ae:	e2 f7       	brpl	.-8      	; 0x1a8 <DIO_VidSetPinValue+0x46>
 1b0:	95 b3       	in	r25, 0x15	; 21
 1b2:	89 2b       	or	r24, r25
 1b4:	85 bb       	out	0x15, r24	; 21
 1b6:	08 95       	ret
			case PortD : SET_BIT(PORTD,copy_U8Pin); break;
 1b8:	81 e0       	ldi	r24, 0x01	; 1
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	02 c0       	rjmp	.+4      	; 0x1c2 <DIO_VidSetPinValue+0x60>
 1be:	88 0f       	add	r24, r24
 1c0:	99 1f       	adc	r25, r25
 1c2:	6a 95       	dec	r22
 1c4:	e2 f7       	brpl	.-8      	; 0x1be <DIO_VidSetPinValue+0x5c>
 1c6:	92 b3       	in	r25, 0x12	; 18
 1c8:	89 2b       	or	r24, r25
 1ca:	82 bb       	out	0x12, r24	; 18
 1cc:	08 95       	ret
			default:                                           break;
		}
	}
	else if (INPUT == copy_U8Value)
 1ce:	41 11       	cpse	r20, r1
 1d0:	37 c0       	rjmp	.+110    	; 0x240 <DIO_VidSetPinValue+0xde>
	{
		switch (copy_U8Port)
 1d2:	81 30       	cpi	r24, 0x01	; 1
 1d4:	91 f0       	breq	.+36     	; 0x1fa <DIO_VidSetPinValue+0x98>
 1d6:	28 f0       	brcs	.+10     	; 0x1e2 <DIO_VidSetPinValue+0x80>
 1d8:	82 30       	cpi	r24, 0x02	; 2
 1da:	d9 f0       	breq	.+54     	; 0x212 <DIO_VidSetPinValue+0xb0>
 1dc:	83 30       	cpi	r24, 0x03	; 3
 1de:	29 f1       	breq	.+74     	; 0x22a <DIO_VidSetPinValue+0xc8>
 1e0:	08 95       	ret
		{
			case PortA : CLR_BIT(PORTA,copy_U8Pin); break;
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	02 c0       	rjmp	.+4      	; 0x1ec <DIO_VidSetPinValue+0x8a>
 1e8:	88 0f       	add	r24, r24
 1ea:	99 1f       	adc	r25, r25
 1ec:	6a 95       	dec	r22
 1ee:	e2 f7       	brpl	.-8      	; 0x1e8 <DIO_VidSetPinValue+0x86>
 1f0:	80 95       	com	r24
 1f2:	9b b3       	in	r25, 0x1b	; 27
 1f4:	89 23       	and	r24, r25
 1f6:	8b bb       	out	0x1b, r24	; 27
 1f8:	08 95       	ret
			case PortB : CLR_BIT(PORTB,copy_U8Pin); break;
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <DIO_VidSetPinValue+0xa2>
 200:	88 0f       	add	r24, r24
 202:	99 1f       	adc	r25, r25
 204:	6a 95       	dec	r22
 206:	e2 f7       	brpl	.-8      	; 0x200 <DIO_VidSetPinValue+0x9e>
 208:	80 95       	com	r24
 20a:	98 b3       	in	r25, 0x18	; 24
 20c:	89 23       	and	r24, r25
 20e:	88 bb       	out	0x18, r24	; 24
 210:	08 95       	ret
			case PortC : CLR_BIT(PORTC,copy_U8Pin); break;
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	02 c0       	rjmp	.+4      	; 0x21c <DIO_VidSetPinValue+0xba>
 218:	88 0f       	add	r24, r24
 21a:	99 1f       	adc	r25, r25
 21c:	6a 95       	dec	r22
 21e:	e2 f7       	brpl	.-8      	; 0x218 <DIO_VidSetPinValue+0xb6>
 220:	80 95       	com	r24
 222:	95 b3       	in	r25, 0x15	; 21
 224:	89 23       	and	r24, r25
 226:	85 bb       	out	0x15, r24	; 21
 228:	08 95       	ret
			case PortD : CLR_BIT(PORTD,copy_U8Pin); break;
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	02 c0       	rjmp	.+4      	; 0x234 <DIO_VidSetPinValue+0xd2>
 230:	88 0f       	add	r24, r24
 232:	99 1f       	adc	r25, r25
 234:	6a 95       	dec	r22
 236:	e2 f7       	brpl	.-8      	; 0x230 <DIO_VidSetPinValue+0xce>
 238:	80 95       	com	r24
 23a:	92 b3       	in	r25, 0x12	; 18
 23c:	89 23       	and	r24, r25
 23e:	82 bb       	out	0x12, r24	; 18
 240:	08 95       	ret

00000242 <_exit>:
 242:	f8 94       	cli

00000244 <__stop_program>:
 244:	ff cf       	rjmp	.-2      	; 0x244 <__stop_program>
