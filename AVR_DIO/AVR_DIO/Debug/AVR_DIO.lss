
AVR_DIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000246  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000029a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000029a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002cc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000308  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000926  00000000  00000000  00000378  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000060f  00000000  00000000  00000c9e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000041f  00000000  00000000  000012ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a8  00000000  00000000  000016cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000042b  00000000  00000000  00001774  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000318  00000000  00000000  00001b9f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00001eb7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 16 01 	call	0x22c	; 0x22c <main>
  64:	0c 94 21 01 	jmp	0x242	; 0x242 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_voidSetPinValue>:



void DIO_voidSetPinValue(EN_port_num EN_Port, EN_pin_num EN_Pin, EN_value_type EN_Value)
{
	if (EN_Value == LOW)
  6c:	41 11       	cpse	r20, r1
  6e:	38 c0       	rjmp	.+112    	; 0xe0 <DIO_voidSetPinValue+0x74>
	{
		switch (EN_Port)
  70:	81 30       	cpi	r24, 0x01	; 1
  72:	91 f0       	breq	.+36     	; 0x98 <DIO_voidSetPinValue+0x2c>
  74:	28 f0       	brcs	.+10     	; 0x80 <DIO_voidSetPinValue+0x14>
  76:	82 30       	cpi	r24, 0x02	; 2
  78:	d9 f0       	breq	.+54     	; 0xb0 <DIO_voidSetPinValue+0x44>
  7a:	83 30       	cpi	r24, 0x03	; 3
  7c:	29 f1       	breq	.+74     	; 0xc8 <DIO_voidSetPinValue+0x5c>
  7e:	08 95       	ret
		{
			case PORT_A:
			CLRBIT(PORTA, EN_Pin);
  80:	2b b3       	in	r18, 0x1b	; 27
  82:	81 e0       	ldi	r24, 0x01	; 1
  84:	90 e0       	ldi	r25, 0x00	; 0
  86:	02 c0       	rjmp	.+4      	; 0x8c <DIO_voidSetPinValue+0x20>
  88:	88 0f       	add	r24, r24
  8a:	99 1f       	adc	r25, r25
  8c:	6a 95       	dec	r22
  8e:	e2 f7       	brpl	.-8      	; 0x88 <DIO_voidSetPinValue+0x1c>
  90:	80 95       	com	r24
  92:	82 23       	and	r24, r18
  94:	8b bb       	out	0x1b, r24	; 27
			break;
  96:	08 95       	ret
			case PORT_B:
			CLRBIT(PORTB, EN_Pin);
  98:	28 b3       	in	r18, 0x18	; 24
  9a:	81 e0       	ldi	r24, 0x01	; 1
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	02 c0       	rjmp	.+4      	; 0xa4 <DIO_voidSetPinValue+0x38>
  a0:	88 0f       	add	r24, r24
  a2:	99 1f       	adc	r25, r25
  a4:	6a 95       	dec	r22
  a6:	e2 f7       	brpl	.-8      	; 0xa0 <DIO_voidSetPinValue+0x34>
  a8:	80 95       	com	r24
  aa:	82 23       	and	r24, r18
  ac:	88 bb       	out	0x18, r24	; 24
			break;
  ae:	08 95       	ret
			case PORT_C:
			CLRBIT(PORTC, EN_Pin);
  b0:	25 b3       	in	r18, 0x15	; 21
  b2:	81 e0       	ldi	r24, 0x01	; 1
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	02 c0       	rjmp	.+4      	; 0xbc <DIO_voidSetPinValue+0x50>
  b8:	88 0f       	add	r24, r24
  ba:	99 1f       	adc	r25, r25
  bc:	6a 95       	dec	r22
  be:	e2 f7       	brpl	.-8      	; 0xb8 <DIO_voidSetPinValue+0x4c>
  c0:	80 95       	com	r24
  c2:	82 23       	and	r24, r18
  c4:	85 bb       	out	0x15, r24	; 21
			break;
  c6:	08 95       	ret
			case PORT_D:
			CLRBIT(PORTD, EN_Pin);
  c8:	22 b3       	in	r18, 0x12	; 18
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <DIO_voidSetPinValue+0x68>
  d0:	88 0f       	add	r24, r24
  d2:	99 1f       	adc	r25, r25
  d4:	6a 95       	dec	r22
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <DIO_voidSetPinValue+0x64>
  d8:	80 95       	com	r24
  da:	82 23       	and	r24, r18
  dc:	82 bb       	out	0x12, r24	; 18
			break;
  de:	08 95       	ret
		}
	}
	else if(EN_Value == HIGH)
  e0:	41 30       	cpi	r20, 0x01	; 1
  e2:	99 f5       	brne	.+102    	; 0x14a <DIO_voidSetPinValue+0xde>
	{
		switch (EN_Port)
  e4:	81 30       	cpi	r24, 0x01	; 1
  e6:	89 f0       	breq	.+34     	; 0x10a <DIO_voidSetPinValue+0x9e>
  e8:	28 f0       	brcs	.+10     	; 0xf4 <DIO_voidSetPinValue+0x88>
  ea:	82 30       	cpi	r24, 0x02	; 2
  ec:	c9 f0       	breq	.+50     	; 0x120 <DIO_voidSetPinValue+0xb4>
  ee:	83 30       	cpi	r24, 0x03	; 3
  f0:	11 f1       	breq	.+68     	; 0x136 <DIO_voidSetPinValue+0xca>
  f2:	08 95       	ret
		{
			case PORT_A:
			SETBIT(PORTA, EN_Pin);
  f4:	2b b3       	in	r18, 0x1b	; 27
  f6:	81 e0       	ldi	r24, 0x01	; 1
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	02 c0       	rjmp	.+4      	; 0x100 <DIO_voidSetPinValue+0x94>
  fc:	88 0f       	add	r24, r24
  fe:	99 1f       	adc	r25, r25
 100:	6a 95       	dec	r22
 102:	e2 f7       	brpl	.-8      	; 0xfc <DIO_voidSetPinValue+0x90>
 104:	82 2b       	or	r24, r18
 106:	8b bb       	out	0x1b, r24	; 27
			break;
 108:	08 95       	ret
			case PORT_B:
			SETBIT(PORTB, EN_Pin);
 10a:	28 b3       	in	r18, 0x18	; 24
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	02 c0       	rjmp	.+4      	; 0x116 <DIO_voidSetPinValue+0xaa>
 112:	88 0f       	add	r24, r24
 114:	99 1f       	adc	r25, r25
 116:	6a 95       	dec	r22
 118:	e2 f7       	brpl	.-8      	; 0x112 <DIO_voidSetPinValue+0xa6>
 11a:	82 2b       	or	r24, r18
 11c:	88 bb       	out	0x18, r24	; 24
			break;
 11e:	08 95       	ret
			case PORT_C:
			SETBIT(PORTC, EN_Pin);
 120:	25 b3       	in	r18, 0x15	; 21
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	02 c0       	rjmp	.+4      	; 0x12c <DIO_voidSetPinValue+0xc0>
 128:	88 0f       	add	r24, r24
 12a:	99 1f       	adc	r25, r25
 12c:	6a 95       	dec	r22
 12e:	e2 f7       	brpl	.-8      	; 0x128 <DIO_voidSetPinValue+0xbc>
 130:	82 2b       	or	r24, r18
 132:	85 bb       	out	0x15, r24	; 21
			break;
 134:	08 95       	ret
			case PORT_D:
			SETBIT(PORTD, EN_Pin);
 136:	22 b3       	in	r18, 0x12	; 18
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	02 c0       	rjmp	.+4      	; 0x142 <DIO_voidSetPinValue+0xd6>
 13e:	88 0f       	add	r24, r24
 140:	99 1f       	adc	r25, r25
 142:	6a 95       	dec	r22
 144:	e2 f7       	brpl	.-8      	; 0x13e <DIO_voidSetPinValue+0xd2>
 146:	82 2b       	or	r24, r18
 148:	82 bb       	out	0x12, r24	; 18
 14a:	08 95       	ret

0000014c <DIO_voidSetPinDirection>:

}

void DIO_voidSetPinDirection(EN_port_num EN_port, EN_pin_num EN_Pin, EN_direction_type EN_Direction)
{
	if(EN_Direction == INPUT)
 14c:	41 11       	cpse	r20, r1
 14e:	38 c0       	rjmp	.+112    	; 0x1c0 <DIO_voidSetPinDirection+0x74>
	{
		switch (EN_port)
 150:	81 30       	cpi	r24, 0x01	; 1
 152:	91 f0       	breq	.+36     	; 0x178 <DIO_voidSetPinDirection+0x2c>
 154:	28 f0       	brcs	.+10     	; 0x160 <DIO_voidSetPinDirection+0x14>
 156:	82 30       	cpi	r24, 0x02	; 2
 158:	d9 f0       	breq	.+54     	; 0x190 <DIO_voidSetPinDirection+0x44>
 15a:	83 30       	cpi	r24, 0x03	; 3
 15c:	29 f1       	breq	.+74     	; 0x1a8 <DIO_voidSetPinDirection+0x5c>
 15e:	08 95       	ret
		{
			case PORT_A:
			CLRBIT(DDRA, EN_Pin);
 160:	2a b3       	in	r18, 0x1a	; 26
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	02 c0       	rjmp	.+4      	; 0x16c <DIO_voidSetPinDirection+0x20>
 168:	88 0f       	add	r24, r24
 16a:	99 1f       	adc	r25, r25
 16c:	6a 95       	dec	r22
 16e:	e2 f7       	brpl	.-8      	; 0x168 <DIO_voidSetPinDirection+0x1c>
 170:	80 95       	com	r24
 172:	82 23       	and	r24, r18
 174:	8a bb       	out	0x1a, r24	; 26
			break;
 176:	08 95       	ret
			case PORT_B:
			CLRBIT(DDRB, EN_Pin);
 178:	27 b3       	in	r18, 0x17	; 23
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 c0       	rjmp	.+4      	; 0x184 <DIO_voidSetPinDirection+0x38>
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	6a 95       	dec	r22
 186:	e2 f7       	brpl	.-8      	; 0x180 <DIO_voidSetPinDirection+0x34>
 188:	80 95       	com	r24
 18a:	82 23       	and	r24, r18
 18c:	87 bb       	out	0x17, r24	; 23
			break;
 18e:	08 95       	ret
			case PORT_C:
			CLRBIT(DDRC, EN_Pin);
 190:	24 b3       	in	r18, 0x14	; 20
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	02 c0       	rjmp	.+4      	; 0x19c <DIO_voidSetPinDirection+0x50>
 198:	88 0f       	add	r24, r24
 19a:	99 1f       	adc	r25, r25
 19c:	6a 95       	dec	r22
 19e:	e2 f7       	brpl	.-8      	; 0x198 <DIO_voidSetPinDirection+0x4c>
 1a0:	80 95       	com	r24
 1a2:	82 23       	and	r24, r18
 1a4:	84 bb       	out	0x14, r24	; 20
			break;
 1a6:	08 95       	ret
			case PORT_D:
			CLRBIT(DDRD, EN_Pin);
 1a8:	21 b3       	in	r18, 0x11	; 17
 1aa:	81 e0       	ldi	r24, 0x01	; 1
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <DIO_voidSetPinDirection+0x68>
 1b0:	88 0f       	add	r24, r24
 1b2:	99 1f       	adc	r25, r25
 1b4:	6a 95       	dec	r22
 1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <DIO_voidSetPinDirection+0x64>
 1b8:	80 95       	com	r24
 1ba:	82 23       	and	r24, r18
 1bc:	81 bb       	out	0x11, r24	; 17
			break;
 1be:	08 95       	ret
		}
	}
	else if(EN_Direction == OUTPUT)
 1c0:	41 30       	cpi	r20, 0x01	; 1
 1c2:	99 f5       	brne	.+102    	; 0x22a <DIO_voidSetPinDirection+0xde>
	{
		switch (EN_port)
 1c4:	81 30       	cpi	r24, 0x01	; 1
 1c6:	89 f0       	breq	.+34     	; 0x1ea <DIO_voidSetPinDirection+0x9e>
 1c8:	28 f0       	brcs	.+10     	; 0x1d4 <DIO_voidSetPinDirection+0x88>
 1ca:	82 30       	cpi	r24, 0x02	; 2
 1cc:	c9 f0       	breq	.+50     	; 0x200 <DIO_voidSetPinDirection+0xb4>
 1ce:	83 30       	cpi	r24, 0x03	; 3
 1d0:	11 f1       	breq	.+68     	; 0x216 <DIO_voidSetPinDirection+0xca>
 1d2:	08 95       	ret
		{
			case PORT_A:
			SETBIT(DDRA, EN_Pin);
 1d4:	2a b3       	in	r18, 0x1a	; 26
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	02 c0       	rjmp	.+4      	; 0x1e0 <DIO_voidSetPinDirection+0x94>
 1dc:	88 0f       	add	r24, r24
 1de:	99 1f       	adc	r25, r25
 1e0:	6a 95       	dec	r22
 1e2:	e2 f7       	brpl	.-8      	; 0x1dc <DIO_voidSetPinDirection+0x90>
 1e4:	82 2b       	or	r24, r18
 1e6:	8a bb       	out	0x1a, r24	; 26
			break;
 1e8:	08 95       	ret
			case PORT_B:
			SETBIT(DDRB, EN_Pin);
 1ea:	27 b3       	in	r18, 0x17	; 23
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <DIO_voidSetPinDirection+0xaa>
 1f2:	88 0f       	add	r24, r24
 1f4:	99 1f       	adc	r25, r25
 1f6:	6a 95       	dec	r22
 1f8:	e2 f7       	brpl	.-8      	; 0x1f2 <DIO_voidSetPinDirection+0xa6>
 1fa:	82 2b       	or	r24, r18
 1fc:	87 bb       	out	0x17, r24	; 23
			break;
 1fe:	08 95       	ret
			case PORT_C:
			SETBIT(DDRC, EN_Pin);
 200:	24 b3       	in	r18, 0x14	; 20
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_voidSetPinDirection+0xc0>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	6a 95       	dec	r22
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_voidSetPinDirection+0xbc>
 210:	82 2b       	or	r24, r18
 212:	84 bb       	out	0x14, r24	; 20
			break;
 214:	08 95       	ret
			case PORT_D:
			SETBIT(DDRD, EN_Pin);
 216:	21 b3       	in	r18, 0x11	; 17
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	02 c0       	rjmp	.+4      	; 0x222 <DIO_voidSetPinDirection+0xd6>
 21e:	88 0f       	add	r24, r24
 220:	99 1f       	adc	r25, r25
 222:	6a 95       	dec	r22
 224:	e2 f7       	brpl	.-8      	; 0x21e <DIO_voidSetPinDirection+0xd2>
 226:	82 2b       	or	r24, r18
 228:	81 bb       	out	0x11, r24	; 17
 22a:	08 95       	ret

0000022c <main>:
#include "DIO_Interface.h"


int main(void)
{
      DIO_voidSetPinDirection(PORT_A, PIN0, OUTPUT);
 22c:	41 e0       	ldi	r20, 0x01	; 1
 22e:	60 e0       	ldi	r22, 0x00	; 0
 230:	80 e0       	ldi	r24, 0x00	; 0
 232:	0e 94 a6 00 	call	0x14c	; 0x14c <DIO_voidSetPinDirection>
      DIO_voidSetPinValue(PORT_A, PIN0, HIGH);
 236:	41 e0       	ldi	r20, 0x01	; 1
 238:	60 e0       	ldi	r22, 0x00	; 0
 23a:	80 e0       	ldi	r24, 0x00	; 0
 23c:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_voidSetPinValue>
 240:	ff cf       	rjmp	.-2      	; 0x240 <main+0x14>

00000242 <_exit>:
 242:	f8 94       	cli

00000244 <__stop_program>:
 244:	ff cf       	rjmp	.-2      	; 0x244 <__stop_program>
