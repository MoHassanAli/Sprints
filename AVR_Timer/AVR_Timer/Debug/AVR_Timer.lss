
AVR_Timer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000536  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000005aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000009  00800060  00800060  000005aa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005aa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000618  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000930  00000000  00000000  000006c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006f2  00000000  00000000  00000ff0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000051a  00000000  00000000  000016e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000014c  00000000  00000000  00001bfc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000415  00000000  00000000  00001d48  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000369  00000000  00000000  0000215d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000024c6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__vector_11>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a9 36       	cpi	r26, 0x69	; 105
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 e6 00 	call	0x1cc	; 0x1cc <main>
  74:	0c 94 99 02 	jmp	0x532	; 0x532 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DIO_VidSetPinDirection>:
		 break;
		 case 2:
		 CLR_BIT(PORTC,Copy_U8Pin);
		  break;
		 case 3:
		 CLR_BIT(PORTD,Copy_U8Pin);
  7c:	41 11       	cpse	r20, r1
  7e:	3b c0       	rjmp	.+118    	; 0xf6 <DIO_VidSetPinDirection+0x7a>
  80:	81 30       	cpi	r24, 0x01	; 1
  82:	99 f0       	breq	.+38     	; 0xaa <DIO_VidSetPinDirection+0x2e>
  84:	28 f0       	brcs	.+10     	; 0x90 <DIO_VidSetPinDirection+0x14>
  86:	82 30       	cpi	r24, 0x02	; 2
  88:	e9 f0       	breq	.+58     	; 0xc4 <DIO_VidSetPinDirection+0x48>
  8a:	83 30       	cpi	r24, 0x03	; 3
  8c:	41 f1       	breq	.+80     	; 0xde <DIO_VidSetPinDirection+0x62>
  8e:	33 c0       	rjmp	.+102    	; 0xf6 <DIO_VidSetPinDirection+0x7a>
  90:	21 e0       	ldi	r18, 0x01	; 1
  92:	30 e0       	ldi	r19, 0x00	; 0
  94:	06 2e       	mov	r0, r22
  96:	02 c0       	rjmp	.+4      	; 0x9c <DIO_VidSetPinDirection+0x20>
  98:	22 0f       	add	r18, r18
  9a:	33 1f       	adc	r19, r19
  9c:	0a 94       	dec	r0
  9e:	e2 f7       	brpl	.-8      	; 0x98 <DIO_VidSetPinDirection+0x1c>
  a0:	20 95       	com	r18
  a2:	9a b3       	in	r25, 0x1a	; 26
  a4:	29 23       	and	r18, r25
  a6:	2a bb       	out	0x1a, r18	; 26
  a8:	26 c0       	rjmp	.+76     	; 0xf6 <DIO_VidSetPinDirection+0x7a>
  aa:	21 e0       	ldi	r18, 0x01	; 1
  ac:	30 e0       	ldi	r19, 0x00	; 0
  ae:	06 2e       	mov	r0, r22
  b0:	02 c0       	rjmp	.+4      	; 0xb6 <DIO_VidSetPinDirection+0x3a>
  b2:	22 0f       	add	r18, r18
  b4:	33 1f       	adc	r19, r19
  b6:	0a 94       	dec	r0
  b8:	e2 f7       	brpl	.-8      	; 0xb2 <DIO_VidSetPinDirection+0x36>
  ba:	20 95       	com	r18
  bc:	97 b3       	in	r25, 0x17	; 23
  be:	29 23       	and	r18, r25
  c0:	27 bb       	out	0x17, r18	; 23
  c2:	19 c0       	rjmp	.+50     	; 0xf6 <DIO_VidSetPinDirection+0x7a>
  c4:	21 e0       	ldi	r18, 0x01	; 1
  c6:	30 e0       	ldi	r19, 0x00	; 0
  c8:	06 2e       	mov	r0, r22
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <DIO_VidSetPinDirection+0x54>
  cc:	22 0f       	add	r18, r18
  ce:	33 1f       	adc	r19, r19
  d0:	0a 94       	dec	r0
  d2:	e2 f7       	brpl	.-8      	; 0xcc <DIO_VidSetPinDirection+0x50>
  d4:	20 95       	com	r18
  d6:	94 b3       	in	r25, 0x14	; 20
  d8:	29 23       	and	r18, r25
  da:	24 bb       	out	0x14, r18	; 20
  dc:	0c c0       	rjmp	.+24     	; 0xf6 <DIO_VidSetPinDirection+0x7a>
  de:	21 e0       	ldi	r18, 0x01	; 1
  e0:	30 e0       	ldi	r19, 0x00	; 0
  e2:	06 2e       	mov	r0, r22
  e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_VidSetPinDirection+0x6e>
  e6:	22 0f       	add	r18, r18
  e8:	33 1f       	adc	r19, r19
  ea:	0a 94       	dec	r0
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_VidSetPinDirection+0x6a>
  ee:	20 95       	com	r18
  f0:	91 b3       	in	r25, 0x11	; 17
  f2:	29 23       	and	r18, r25
  f4:	21 bb       	out	0x11, r18	; 17
  f6:	41 30       	cpi	r20, 0x01	; 1
  f8:	a1 f5       	brne	.+104    	; 0x162 <DIO_VidSetPinDirection+0xe6>
  fa:	81 30       	cpi	r24, 0x01	; 1
  fc:	89 f0       	breq	.+34     	; 0x120 <DIO_VidSetPinDirection+0xa4>
  fe:	28 f0       	brcs	.+10     	; 0x10a <DIO_VidSetPinDirection+0x8e>
 100:	82 30       	cpi	r24, 0x02	; 2
 102:	c9 f0       	breq	.+50     	; 0x136 <DIO_VidSetPinDirection+0xba>
 104:	83 30       	cpi	r24, 0x03	; 3
 106:	19 f1       	breq	.+70     	; 0x14e <DIO_VidSetPinDirection+0xd2>
 108:	08 95       	ret
 10a:	81 e0       	ldi	r24, 0x01	; 1
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	02 c0       	rjmp	.+4      	; 0x114 <DIO_VidSetPinDirection+0x98>
 110:	88 0f       	add	r24, r24
 112:	99 1f       	adc	r25, r25
 114:	6a 95       	dec	r22
 116:	e2 f7       	brpl	.-8      	; 0x110 <DIO_VidSetPinDirection+0x94>
 118:	9a b3       	in	r25, 0x1a	; 26
 11a:	89 2b       	or	r24, r25
 11c:	8a bb       	out	0x1a, r24	; 26
 11e:	08 95       	ret
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	02 c0       	rjmp	.+4      	; 0x12a <DIO_VidSetPinDirection+0xae>
 126:	88 0f       	add	r24, r24
 128:	99 1f       	adc	r25, r25
 12a:	6a 95       	dec	r22
 12c:	e2 f7       	brpl	.-8      	; 0x126 <DIO_VidSetPinDirection+0xaa>
 12e:	97 b3       	in	r25, 0x17	; 23
 130:	89 2b       	or	r24, r25
 132:	87 bb       	out	0x17, r24	; 23
 134:	08 95       	ret
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_VidSetPinDirection+0xc4>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_VidSetPinDirection+0xc0>
 144:	80 95       	com	r24
 146:	94 b3       	in	r25, 0x14	; 20
 148:	89 23       	and	r24, r25
 14a:	84 bb       	out	0x14, r24	; 20
 14c:	08 95       	ret
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	02 c0       	rjmp	.+4      	; 0x158 <DIO_VidSetPinDirection+0xdc>
 154:	88 0f       	add	r24, r24
 156:	99 1f       	adc	r25, r25
 158:	6a 95       	dec	r22
 15a:	e2 f7       	brpl	.-8      	; 0x154 <DIO_VidSetPinDirection+0xd8>
 15c:	91 b3       	in	r25, 0x11	; 17
 15e:	89 2b       	or	r24, r25
 160:	81 bb       	out	0x11, r24	; 17
 162:	08 95       	ret

00000164 <DIO_VidTogglePin>:
	
	
}
void DIO_VidTogglePin       (u8 Copy_U8Port, u8 Copy_U8Pin){
	
	switch(Copy_U8Port){
 164:	81 30       	cpi	r24, 0x01	; 1
 166:	89 f0       	breq	.+34     	; 0x18a <DIO_VidTogglePin+0x26>
 168:	28 f0       	brcs	.+10     	; 0x174 <DIO_VidTogglePin+0x10>
 16a:	82 30       	cpi	r24, 0x02	; 2
 16c:	c9 f0       	breq	.+50     	; 0x1a0 <DIO_VidTogglePin+0x3c>
 16e:	83 30       	cpi	r24, 0x03	; 3
 170:	11 f1       	breq	.+68     	; 0x1b6 <DIO_VidTogglePin+0x52>
 172:	08 95       	ret
		
		 case 0:
		 TOGGLE_BIT(PORTA, Copy_U8Pin );
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	02 c0       	rjmp	.+4      	; 0x17e <DIO_VidTogglePin+0x1a>
 17a:	88 0f       	add	r24, r24
 17c:	99 1f       	adc	r25, r25
 17e:	6a 95       	dec	r22
 180:	e2 f7       	brpl	.-8      	; 0x17a <DIO_VidTogglePin+0x16>
 182:	9b b3       	in	r25, 0x1b	; 27
 184:	89 27       	eor	r24, r25
 186:	8b bb       	out	0x1b, r24	; 27
		 break;
 188:	08 95       	ret
		 case 1:
		 TOGGLE_BIT( PORTB, Copy_U8Pin );
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	02 c0       	rjmp	.+4      	; 0x194 <DIO_VidTogglePin+0x30>
 190:	88 0f       	add	r24, r24
 192:	99 1f       	adc	r25, r25
 194:	6a 95       	dec	r22
 196:	e2 f7       	brpl	.-8      	; 0x190 <DIO_VidTogglePin+0x2c>
 198:	98 b3       	in	r25, 0x18	; 24
 19a:	89 27       	eor	r24, r25
 19c:	88 bb       	out	0x18, r24	; 24
		 break;
 19e:	08 95       	ret
		 case 2:
		TOGGLE_BIT( PORTC, Copy_U8Pin );
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <DIO_VidTogglePin+0x46>
 1a6:	88 0f       	add	r24, r24
 1a8:	99 1f       	adc	r25, r25
 1aa:	6a 95       	dec	r22
 1ac:	e2 f7       	brpl	.-8      	; 0x1a6 <DIO_VidTogglePin+0x42>
 1ae:	95 b3       	in	r25, 0x15	; 21
 1b0:	89 27       	eor	r24, r25
 1b2:	85 bb       	out	0x15, r24	; 21
		  break;
 1b4:	08 95       	ret
		 case 3:
		 TOGGLE_BIT( PORTD, Copy_U8Pin );
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	02 c0       	rjmp	.+4      	; 0x1c0 <DIO_VidTogglePin+0x5c>
 1bc:	88 0f       	add	r24, r24
 1be:	99 1f       	adc	r25, r25
 1c0:	6a 95       	dec	r22
 1c2:	e2 f7       	brpl	.-8      	; 0x1bc <DIO_VidTogglePin+0x58>
 1c4:	92 b3       	in	r25, 0x12	; 18
 1c6:	89 27       	eor	r24, r25
 1c8:	82 bb       	out	0x12, r24	; 18
 1ca:	08 95       	ret

000001cc <main>:
#define F_CPU 8000000


int main(void)
{
	Timer0_Init();
 1cc:	0e 94 0c 01 	call	0x218	; 0x218 <Timer0_Init>
    DIO_VidSetPinDirection(DIO_PORTA,DIO_PIN0,DIO_OUTPUT);
 1d0:	41 e0       	ldi	r20, 0x01	; 1
 1d2:	60 e0       	ldi	r22, 0x00	; 0
 1d4:	80 e0       	ldi	r24, 0x00	; 0
 1d6:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VidSetPinDirection>
    while (1) 
    {
		
		
		
		Timer0_Delay(1000000);
 1da:	60 e4       	ldi	r22, 0x40	; 64
 1dc:	72 e4       	ldi	r23, 0x42	; 66
 1de:	8f e0       	ldi	r24, 0x0F	; 15
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <Timer0_Delay>
 1e6:	f9 cf       	rjmp	.-14     	; 0x1da <main+0xe>

000001e8 <Timer0_Delay>:
void Timer0_Duty(u8 duty){
	OCR0=duty;
	//OCR0=(duty*256)/100;

}
void Timer0_Delay(u32 time){
 1e8:	cf 93       	push	r28
 1ea:	c6 2f       	mov	r28, r22
#if Clock_Select ==   PRESCALER_8

float t_ov=(256*8.0)/(8);
counter_ov=time/t_ov;
 1ec:	0e 94 9e 01 	call	0x33c	; 0x33c <__floatunsisf>
 1f0:	20 e0       	ldi	r18, 0x00	; 0
 1f2:	30 e0       	ldi	r19, 0x00	; 0
 1f4:	40 e8       	ldi	r20, 0x80	; 128
 1f6:	5b e3       	ldi	r21, 0x3B	; 59
 1f8:	0e 94 04 02 	call	0x408	; 0x408 <__mulsf3>
 1fc:	0e 94 6f 01 	call	0x2de	; 0x2de <__fixunssfsi>
 200:	60 93 65 00 	sts	0x0065, r22	; 0x800065 <counter_ov>
 204:	70 93 66 00 	sts	0x0066, r23	; 0x800066 <counter_ov+0x1>
 208:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <counter_ov+0x2>
 20c:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <counter_ov+0x3>
preload=time%256;
 210:	c0 93 64 00 	sts	0x0064, r28	; 0x800064 <preload>
#endif
}
 214:	cf 91       	pop	r28
 216:	08 95       	ret

00000218 <Timer0_Init>:
void Timer0_Init(void){
	SET_BIT(SREG,7);// global inturbt enable
 218:	8f b7       	in	r24, 0x3f	; 63
 21a:	80 68       	ori	r24, 0x80	; 128
 21c:	8f bf       	out	0x3f, r24	; 63
	/*  Select the Operation_Mode  */

	#if Operation_Mode == Normal_Mode
		CLR_BIT(TCCR0,6);
 21e:	83 b7       	in	r24, 0x33	; 51
		CLR_BIT(TCCR0,3);
 220:	98 2f       	mov	r25, r24
 222:	97 7b       	andi	r25, 0xB7	; 183
 224:	93 bf       	out	0x33, r25	; 51
		// Overflow Interrupt
		//preload value
		TCNT0=preload;
 226:	90 91 64 00 	lds	r25, 0x0064	; 0x800064 <preload>
 22a:	92 bf       	out	0x32, r25	; 50
		// enable over flow Interrupt mode for timer 0
		SET_BIT(TIMSK,0);
 22c:	99 b7       	in	r25, 0x39	; 57
 22e:	91 60       	ori	r25, 0x01	; 1
 230:	99 bf       	out	0x39, r25	; 57
	SET_BIT(TCCR0,0); // CS00
	CLR_BIT(TCCR0,1); // CS01
	CLR_BIT(TCCR0,2); // CS02

#elif Clock_Select ==   PRESCALER_8
	CLR_BIT(TCCR0,0); // CS00
 232:	86 7b       	andi	r24, 0xB6	; 182
	SET_BIT(TCCR0,1); // CS01
 234:	82 60       	ori	r24, 0x02	; 2
	CLR_BIT(TCCR0,2); // CS02
 236:	8b 7f       	andi	r24, 0xFB	; 251
 238:	83 bf       	out	0x33, r24	; 51
 23a:	08 95       	ret

0000023c <__vector_11>:
	// TCNT0=0xf7;
	 //OCR0=200;
}
#if Operation_Mode == Normal_Mode

void __vector_11(void){
 23c:	1f 92       	push	r1
 23e:	0f 92       	push	r0
 240:	0f b6       	in	r0, 0x3f	; 63
 242:	0f 92       	push	r0
 244:	11 24       	eor	r1, r1
 246:	2f 93       	push	r18
 248:	3f 93       	push	r19
 24a:	4f 93       	push	r20
 24c:	5f 93       	push	r21
 24e:	6f 93       	push	r22
 250:	7f 93       	push	r23
 252:	8f 93       	push	r24
 254:	9f 93       	push	r25
 256:	af 93       	push	r26
 258:	bf 93       	push	r27
 25a:	ef 93       	push	r30
 25c:	ff 93       	push	r31
	static u32 counter=0;

	counter++;
 25e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 262:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 266:	a0 91 62 00 	lds	r26, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 26a:	b0 91 63 00 	lds	r27, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 26e:	01 96       	adiw	r24, 0x01	; 1
 270:	a1 1d       	adc	r26, r1
 272:	b1 1d       	adc	r27, r1
 274:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 278:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 27c:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 280:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 if(counter == counter_ov){
 284:	40 91 65 00 	lds	r20, 0x0065	; 0x800065 <counter_ov>
 288:	50 91 66 00 	lds	r21, 0x0066	; 0x800066 <counter_ov+0x1>
 28c:	60 91 67 00 	lds	r22, 0x0067	; 0x800067 <counter_ov+0x2>
 290:	70 91 68 00 	lds	r23, 0x0068	; 0x800068 <counter_ov+0x3>
 294:	84 17       	cp	r24, r20
 296:	95 07       	cpc	r25, r21
 298:	a6 07       	cpc	r26, r22
 29a:	b7 07       	cpc	r27, r23
 29c:	79 f4       	brne	.+30     	; 0x2bc <__vector_11+0x80>
	 TCNT0=preload;
 29e:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <preload>
 2a2:	82 bf       	out	0x32, r24	; 50
	 DIO_VidTogglePin(DIO_PORTA,DIO_PIN0);
 2a4:	60 e0       	ldi	r22, 0x00	; 0
 2a6:	80 e0       	ldi	r24, 0x00	; 0
 2a8:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_VidTogglePin>
	 counter=0;
 2ac:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 2b0:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 2b4:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 2b8:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>

 }

}
 2bc:	ff 91       	pop	r31
 2be:	ef 91       	pop	r30
 2c0:	bf 91       	pop	r27
 2c2:	af 91       	pop	r26
 2c4:	9f 91       	pop	r25
 2c6:	8f 91       	pop	r24
 2c8:	7f 91       	pop	r23
 2ca:	6f 91       	pop	r22
 2cc:	5f 91       	pop	r21
 2ce:	4f 91       	pop	r20
 2d0:	3f 91       	pop	r19
 2d2:	2f 91       	pop	r18
 2d4:	0f 90       	pop	r0
 2d6:	0f be       	out	0x3f, r0	; 63
 2d8:	0f 90       	pop	r0
 2da:	1f 90       	pop	r1
 2dc:	18 95       	reti

000002de <__fixunssfsi>:
 2de:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <__fp_splitA>
 2e2:	88 f0       	brcs	.+34     	; 0x306 <__fixunssfsi+0x28>
 2e4:	9f 57       	subi	r25, 0x7F	; 127
 2e6:	98 f0       	brcs	.+38     	; 0x30e <__fixunssfsi+0x30>
 2e8:	b9 2f       	mov	r27, r25
 2ea:	99 27       	eor	r25, r25
 2ec:	b7 51       	subi	r27, 0x17	; 23
 2ee:	b0 f0       	brcs	.+44     	; 0x31c <__fixunssfsi+0x3e>
 2f0:	e1 f0       	breq	.+56     	; 0x32a <__fixunssfsi+0x4c>
 2f2:	66 0f       	add	r22, r22
 2f4:	77 1f       	adc	r23, r23
 2f6:	88 1f       	adc	r24, r24
 2f8:	99 1f       	adc	r25, r25
 2fa:	1a f0       	brmi	.+6      	; 0x302 <__fixunssfsi+0x24>
 2fc:	ba 95       	dec	r27
 2fe:	c9 f7       	brne	.-14     	; 0x2f2 <__fixunssfsi+0x14>
 300:	14 c0       	rjmp	.+40     	; 0x32a <__fixunssfsi+0x4c>
 302:	b1 30       	cpi	r27, 0x01	; 1
 304:	91 f0       	breq	.+36     	; 0x32a <__fixunssfsi+0x4c>
 306:	0e 94 fd 01 	call	0x3fa	; 0x3fa <__fp_zero>
 30a:	b1 e0       	ldi	r27, 0x01	; 1
 30c:	08 95       	ret
 30e:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__fp_zero>
 312:	67 2f       	mov	r22, r23
 314:	78 2f       	mov	r23, r24
 316:	88 27       	eor	r24, r24
 318:	b8 5f       	subi	r27, 0xF8	; 248
 31a:	39 f0       	breq	.+14     	; 0x32a <__fixunssfsi+0x4c>
 31c:	b9 3f       	cpi	r27, 0xF9	; 249
 31e:	cc f3       	brlt	.-14     	; 0x312 <__fixunssfsi+0x34>
 320:	86 95       	lsr	r24
 322:	77 95       	ror	r23
 324:	67 95       	ror	r22
 326:	b3 95       	inc	r27
 328:	d9 f7       	brne	.-10     	; 0x320 <__fixunssfsi+0x42>
 32a:	3e f4       	brtc	.+14     	; 0x33a <__fixunssfsi+0x5c>
 32c:	90 95       	com	r25
 32e:	80 95       	com	r24
 330:	70 95       	com	r23
 332:	61 95       	neg	r22
 334:	7f 4f       	sbci	r23, 0xFF	; 255
 336:	8f 4f       	sbci	r24, 0xFF	; 255
 338:	9f 4f       	sbci	r25, 0xFF	; 255
 33a:	08 95       	ret

0000033c <__floatunsisf>:
 33c:	e8 94       	clt
 33e:	09 c0       	rjmp	.+18     	; 0x352 <__floatsisf+0x12>

00000340 <__floatsisf>:
 340:	97 fb       	bst	r25, 7
 342:	3e f4       	brtc	.+14     	; 0x352 <__floatsisf+0x12>
 344:	90 95       	com	r25
 346:	80 95       	com	r24
 348:	70 95       	com	r23
 34a:	61 95       	neg	r22
 34c:	7f 4f       	sbci	r23, 0xFF	; 255
 34e:	8f 4f       	sbci	r24, 0xFF	; 255
 350:	9f 4f       	sbci	r25, 0xFF	; 255
 352:	99 23       	and	r25, r25
 354:	a9 f0       	breq	.+42     	; 0x380 <__floatsisf+0x40>
 356:	f9 2f       	mov	r31, r25
 358:	96 e9       	ldi	r25, 0x96	; 150
 35a:	bb 27       	eor	r27, r27
 35c:	93 95       	inc	r25
 35e:	f6 95       	lsr	r31
 360:	87 95       	ror	r24
 362:	77 95       	ror	r23
 364:	67 95       	ror	r22
 366:	b7 95       	ror	r27
 368:	f1 11       	cpse	r31, r1
 36a:	f8 cf       	rjmp	.-16     	; 0x35c <__floatsisf+0x1c>
 36c:	fa f4       	brpl	.+62     	; 0x3ac <__floatsisf+0x6c>
 36e:	bb 0f       	add	r27, r27
 370:	11 f4       	brne	.+4      	; 0x376 <__floatsisf+0x36>
 372:	60 ff       	sbrs	r22, 0
 374:	1b c0       	rjmp	.+54     	; 0x3ac <__floatsisf+0x6c>
 376:	6f 5f       	subi	r22, 0xFF	; 255
 378:	7f 4f       	sbci	r23, 0xFF	; 255
 37a:	8f 4f       	sbci	r24, 0xFF	; 255
 37c:	9f 4f       	sbci	r25, 0xFF	; 255
 37e:	16 c0       	rjmp	.+44     	; 0x3ac <__floatsisf+0x6c>
 380:	88 23       	and	r24, r24
 382:	11 f0       	breq	.+4      	; 0x388 <__floatsisf+0x48>
 384:	96 e9       	ldi	r25, 0x96	; 150
 386:	11 c0       	rjmp	.+34     	; 0x3aa <__floatsisf+0x6a>
 388:	77 23       	and	r23, r23
 38a:	21 f0       	breq	.+8      	; 0x394 <__floatsisf+0x54>
 38c:	9e e8       	ldi	r25, 0x8E	; 142
 38e:	87 2f       	mov	r24, r23
 390:	76 2f       	mov	r23, r22
 392:	05 c0       	rjmp	.+10     	; 0x39e <__floatsisf+0x5e>
 394:	66 23       	and	r22, r22
 396:	71 f0       	breq	.+28     	; 0x3b4 <__floatsisf+0x74>
 398:	96 e8       	ldi	r25, 0x86	; 134
 39a:	86 2f       	mov	r24, r22
 39c:	70 e0       	ldi	r23, 0x00	; 0
 39e:	60 e0       	ldi	r22, 0x00	; 0
 3a0:	2a f0       	brmi	.+10     	; 0x3ac <__floatsisf+0x6c>
 3a2:	9a 95       	dec	r25
 3a4:	66 0f       	add	r22, r22
 3a6:	77 1f       	adc	r23, r23
 3a8:	88 1f       	adc	r24, r24
 3aa:	da f7       	brpl	.-10     	; 0x3a2 <__floatsisf+0x62>
 3ac:	88 0f       	add	r24, r24
 3ae:	96 95       	lsr	r25
 3b0:	87 95       	ror	r24
 3b2:	97 f9       	bld	r25, 7
 3b4:	08 95       	ret

000003b6 <__fp_split3>:
 3b6:	57 fd       	sbrc	r21, 7
 3b8:	90 58       	subi	r25, 0x80	; 128
 3ba:	44 0f       	add	r20, r20
 3bc:	55 1f       	adc	r21, r21
 3be:	59 f0       	breq	.+22     	; 0x3d6 <__fp_splitA+0x10>
 3c0:	5f 3f       	cpi	r21, 0xFF	; 255
 3c2:	71 f0       	breq	.+28     	; 0x3e0 <__fp_splitA+0x1a>
 3c4:	47 95       	ror	r20

000003c6 <__fp_splitA>:
 3c6:	88 0f       	add	r24, r24
 3c8:	97 fb       	bst	r25, 7
 3ca:	99 1f       	adc	r25, r25
 3cc:	61 f0       	breq	.+24     	; 0x3e6 <__fp_splitA+0x20>
 3ce:	9f 3f       	cpi	r25, 0xFF	; 255
 3d0:	79 f0       	breq	.+30     	; 0x3f0 <__fp_splitA+0x2a>
 3d2:	87 95       	ror	r24
 3d4:	08 95       	ret
 3d6:	12 16       	cp	r1, r18
 3d8:	13 06       	cpc	r1, r19
 3da:	14 06       	cpc	r1, r20
 3dc:	55 1f       	adc	r21, r21
 3de:	f2 cf       	rjmp	.-28     	; 0x3c4 <__fp_split3+0xe>
 3e0:	46 95       	lsr	r20
 3e2:	f1 df       	rcall	.-30     	; 0x3c6 <__fp_splitA>
 3e4:	08 c0       	rjmp	.+16     	; 0x3f6 <__fp_splitA+0x30>
 3e6:	16 16       	cp	r1, r22
 3e8:	17 06       	cpc	r1, r23
 3ea:	18 06       	cpc	r1, r24
 3ec:	99 1f       	adc	r25, r25
 3ee:	f1 cf       	rjmp	.-30     	; 0x3d2 <__fp_splitA+0xc>
 3f0:	86 95       	lsr	r24
 3f2:	71 05       	cpc	r23, r1
 3f4:	61 05       	cpc	r22, r1
 3f6:	08 94       	sec
 3f8:	08 95       	ret

000003fa <__fp_zero>:
 3fa:	e8 94       	clt

000003fc <__fp_szero>:
 3fc:	bb 27       	eor	r27, r27
 3fe:	66 27       	eor	r22, r22
 400:	77 27       	eor	r23, r23
 402:	cb 01       	movw	r24, r22
 404:	97 f9       	bld	r25, 7
 406:	08 95       	ret

00000408 <__mulsf3>:
 408:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3x>
 40c:	0c 94 88 02 	jmp	0x510	; 0x510 <__fp_round>
 410:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <__fp_pscA>
 414:	38 f0       	brcs	.+14     	; 0x424 <__mulsf3+0x1c>
 416:	0e 94 81 02 	call	0x502	; 0x502 <__fp_pscB>
 41a:	20 f0       	brcs	.+8      	; 0x424 <__mulsf3+0x1c>
 41c:	95 23       	and	r25, r21
 41e:	11 f0       	breq	.+4      	; 0x424 <__mulsf3+0x1c>
 420:	0c 94 71 02 	jmp	0x4e2	; 0x4e2 <__fp_inf>
 424:	0c 94 77 02 	jmp	0x4ee	; 0x4ee <__fp_nan>
 428:	11 24       	eor	r1, r1
 42a:	0c 94 fe 01 	jmp	0x3fc	; 0x3fc <__fp_szero>

0000042e <__mulsf3x>:
 42e:	0e 94 db 01 	call	0x3b6	; 0x3b6 <__fp_split3>
 432:	70 f3       	brcs	.-36     	; 0x410 <__mulsf3+0x8>

00000434 <__mulsf3_pse>:
 434:	95 9f       	mul	r25, r21
 436:	c1 f3       	breq	.-16     	; 0x428 <__mulsf3+0x20>
 438:	95 0f       	add	r25, r21
 43a:	50 e0       	ldi	r21, 0x00	; 0
 43c:	55 1f       	adc	r21, r21
 43e:	62 9f       	mul	r22, r18
 440:	f0 01       	movw	r30, r0
 442:	72 9f       	mul	r23, r18
 444:	bb 27       	eor	r27, r27
 446:	f0 0d       	add	r31, r0
 448:	b1 1d       	adc	r27, r1
 44a:	63 9f       	mul	r22, r19
 44c:	aa 27       	eor	r26, r26
 44e:	f0 0d       	add	r31, r0
 450:	b1 1d       	adc	r27, r1
 452:	aa 1f       	adc	r26, r26
 454:	64 9f       	mul	r22, r20
 456:	66 27       	eor	r22, r22
 458:	b0 0d       	add	r27, r0
 45a:	a1 1d       	adc	r26, r1
 45c:	66 1f       	adc	r22, r22
 45e:	82 9f       	mul	r24, r18
 460:	22 27       	eor	r18, r18
 462:	b0 0d       	add	r27, r0
 464:	a1 1d       	adc	r26, r1
 466:	62 1f       	adc	r22, r18
 468:	73 9f       	mul	r23, r19
 46a:	b0 0d       	add	r27, r0
 46c:	a1 1d       	adc	r26, r1
 46e:	62 1f       	adc	r22, r18
 470:	83 9f       	mul	r24, r19
 472:	a0 0d       	add	r26, r0
 474:	61 1d       	adc	r22, r1
 476:	22 1f       	adc	r18, r18
 478:	74 9f       	mul	r23, r20
 47a:	33 27       	eor	r19, r19
 47c:	a0 0d       	add	r26, r0
 47e:	61 1d       	adc	r22, r1
 480:	23 1f       	adc	r18, r19
 482:	84 9f       	mul	r24, r20
 484:	60 0d       	add	r22, r0
 486:	21 1d       	adc	r18, r1
 488:	82 2f       	mov	r24, r18
 48a:	76 2f       	mov	r23, r22
 48c:	6a 2f       	mov	r22, r26
 48e:	11 24       	eor	r1, r1
 490:	9f 57       	subi	r25, 0x7F	; 127
 492:	50 40       	sbci	r21, 0x00	; 0
 494:	9a f0       	brmi	.+38     	; 0x4bc <__mulsf3_pse+0x88>
 496:	f1 f0       	breq	.+60     	; 0x4d4 <__mulsf3_pse+0xa0>
 498:	88 23       	and	r24, r24
 49a:	4a f0       	brmi	.+18     	; 0x4ae <__mulsf3_pse+0x7a>
 49c:	ee 0f       	add	r30, r30
 49e:	ff 1f       	adc	r31, r31
 4a0:	bb 1f       	adc	r27, r27
 4a2:	66 1f       	adc	r22, r22
 4a4:	77 1f       	adc	r23, r23
 4a6:	88 1f       	adc	r24, r24
 4a8:	91 50       	subi	r25, 0x01	; 1
 4aa:	50 40       	sbci	r21, 0x00	; 0
 4ac:	a9 f7       	brne	.-22     	; 0x498 <__mulsf3_pse+0x64>
 4ae:	9e 3f       	cpi	r25, 0xFE	; 254
 4b0:	51 05       	cpc	r21, r1
 4b2:	80 f0       	brcs	.+32     	; 0x4d4 <__mulsf3_pse+0xa0>
 4b4:	0c 94 71 02 	jmp	0x4e2	; 0x4e2 <__fp_inf>
 4b8:	0c 94 fe 01 	jmp	0x3fc	; 0x3fc <__fp_szero>
 4bc:	5f 3f       	cpi	r21, 0xFF	; 255
 4be:	e4 f3       	brlt	.-8      	; 0x4b8 <__mulsf3_pse+0x84>
 4c0:	98 3e       	cpi	r25, 0xE8	; 232
 4c2:	d4 f3       	brlt	.-12     	; 0x4b8 <__mulsf3_pse+0x84>
 4c4:	86 95       	lsr	r24
 4c6:	77 95       	ror	r23
 4c8:	67 95       	ror	r22
 4ca:	b7 95       	ror	r27
 4cc:	f7 95       	ror	r31
 4ce:	e7 95       	ror	r30
 4d0:	9f 5f       	subi	r25, 0xFF	; 255
 4d2:	c1 f7       	brne	.-16     	; 0x4c4 <__mulsf3_pse+0x90>
 4d4:	fe 2b       	or	r31, r30
 4d6:	88 0f       	add	r24, r24
 4d8:	91 1d       	adc	r25, r1
 4da:	96 95       	lsr	r25
 4dc:	87 95       	ror	r24
 4de:	97 f9       	bld	r25, 7
 4e0:	08 95       	ret

000004e2 <__fp_inf>:
 4e2:	97 f9       	bld	r25, 7
 4e4:	9f 67       	ori	r25, 0x7F	; 127
 4e6:	80 e8       	ldi	r24, 0x80	; 128
 4e8:	70 e0       	ldi	r23, 0x00	; 0
 4ea:	60 e0       	ldi	r22, 0x00	; 0
 4ec:	08 95       	ret

000004ee <__fp_nan>:
 4ee:	9f ef       	ldi	r25, 0xFF	; 255
 4f0:	80 ec       	ldi	r24, 0xC0	; 192
 4f2:	08 95       	ret

000004f4 <__fp_pscA>:
 4f4:	00 24       	eor	r0, r0
 4f6:	0a 94       	dec	r0
 4f8:	16 16       	cp	r1, r22
 4fa:	17 06       	cpc	r1, r23
 4fc:	18 06       	cpc	r1, r24
 4fe:	09 06       	cpc	r0, r25
 500:	08 95       	ret

00000502 <__fp_pscB>:
 502:	00 24       	eor	r0, r0
 504:	0a 94       	dec	r0
 506:	12 16       	cp	r1, r18
 508:	13 06       	cpc	r1, r19
 50a:	14 06       	cpc	r1, r20
 50c:	05 06       	cpc	r0, r21
 50e:	08 95       	ret

00000510 <__fp_round>:
 510:	09 2e       	mov	r0, r25
 512:	03 94       	inc	r0
 514:	00 0c       	add	r0, r0
 516:	11 f4       	brne	.+4      	; 0x51c <__fp_round+0xc>
 518:	88 23       	and	r24, r24
 51a:	52 f0       	brmi	.+20     	; 0x530 <__fp_round+0x20>
 51c:	bb 0f       	add	r27, r27
 51e:	40 f4       	brcc	.+16     	; 0x530 <__fp_round+0x20>
 520:	bf 2b       	or	r27, r31
 522:	11 f4       	brne	.+4      	; 0x528 <__fp_round+0x18>
 524:	60 ff       	sbrs	r22, 0
 526:	04 c0       	rjmp	.+8      	; 0x530 <__fp_round+0x20>
 528:	6f 5f       	subi	r22, 0xFF	; 255
 52a:	7f 4f       	sbci	r23, 0xFF	; 255
 52c:	8f 4f       	sbci	r24, 0xFF	; 255
 52e:	9f 4f       	sbci	r25, 0xFF	; 255
 530:	08 95       	ret

00000532 <_exit>:
 532:	f8 94       	cli

00000534 <__stop_program>:
 534:	ff cf       	rjmp	.-2      	; 0x534 <__stop_program>
